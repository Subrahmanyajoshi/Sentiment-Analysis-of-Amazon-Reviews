# NOTE: while mentioning Google cloud storage paths, mention full path starting from 'gs://'
train_params:
  batch_size: 64
  num_epochs: 10
  steps_per_epoch: 163
  data_dir: 'gs://vernal-buffer-285906/train_data/'
  output_dir: 'gs://vernal-buffer-285906/train_results'
  image_shape: (227, 227, 3)
  use_multiprocessing: True
  # number of workers to use if multiprocessing is enabled
  workers: 6

  # Comment/remove a callback section to disable it
  callbacks:
    # Tensorboard callback.
    TensorBoard:
      log_dir: 'gs://vernal-buffer-285906/train_results/tensorboard'

    # Model checkpoint callback.
    ModelCheckpoint:
      filepath: 'gs://vernal-buffer-285906/train_results/checkpoints/model.{epoch:02d}-{val_loss:.2f}.hdf5'
      monitor: 'val_accuracy'
      save_freq: 'epoch'
      verbose: 1
      period: 3
      save_best_only: False

    # Early stopping callback.
    EarlyStopping:
      monitor: 'val_accuracy'
      mode: 'min'
      verbose: 1
      patience: 10

    # Csv logger callback.
    CSVLogger:
      filename: 'gs://vernal-buffer-285906/train_results/train_logs.csv'
      separator: ','
      append: False

# Two types of models are available, CNN built from scratch and VGG19 using transfer learning
model_params:
  model: 'CNN'
  optimizer: 'adam'
  loss: "binary_crossentropy"
  metrics: ["accuracy"]

predict_params:
  model_path: 'gs://vernal-buffer-285906/train_results/trained_model/2021_08_01-10:07:06/CNN_Breast_cancer_detector.hdf5'
  data_path: 'gs://vernal-buffer-285906/test_images/malignant'